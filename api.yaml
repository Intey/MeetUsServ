openapi: "3.0.0"
info:
  title: Simple API overview
  version: 1.0.0

servers:
  - url: /api

paths:
  /users:
    get:
      description: get user from api
      responses:
        200:
          description: returns user
          content:
            application/json:
              schema:
                required:
                  - username
                properties:
                  username:
                    type: string
        404:
          description: not found user
    post:
      description: add new user
      parameters:
        - name: user
          in: body
          description: user object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

      responses:
        200:
          description: Created user with ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  '/users/{id}':
    get:
      description: fetch user by id
      parameters:
        - name: id
          in: path
          description: storage identifier
          schema:
            type: integer
      responses:
        200:
          description: found user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        404:
          description: user with given id not found
    put:
      description: fetch user by id
      parameters:
        - name: id
          in: path
          description: storage identifier
          schema:
            type: integer
        - name: user
          in: body
          description: new user name
          schema:
            $ref: "#/components/schemas/User"
      responses:
        200:
          description: found user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        404:
          description: user with given id not found

  '/users/{id}/meets':
    post:
      description: create meet for user
      operationId: api.meets.post
      parameters:
        - name: id
          in: path
          description: storage user identifier
          schema:
            type: integer
        - name: name
          in: body
          description: Name of meet. Describes the target of meet.
          schema:
            type: str
      responses:
        201:
          description: created meet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Meet"
    get:
      operationId: api.meets.search
      description: get user meets
      parameters:
        - name: id
          in: path
          description: storage user identifier
          schema:
            type: integer
      responses:
        200:
          description: found meets for user with id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Meet"

  '/users/{id}/meets/{mid}/times':
    post:
      description: create user time in meet, when he can meet
      operationId: api.meets.times.post
      parameters:
        - name: id
          in: path
          description: storage identifier of user
          schema:
            type: integer
        - name: mid
          in: path
          description: storage identifier of meet
          schema:
            type: integer
        - name: times
          in: body
          description: Array of time ranges for date, when user can meet
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Meet"
      responses:
        201:
          description: created meet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Meet"
    get:
      operationId: api.meets.times.search
      parameters:
        - name: id
          in: path
          description: storage identifier of user
          schema:
            type: integer
        - name: mid
          in: path
          description: storage identifier of meet
          schema:
            type: integer
      responses:
        200:
          description: user(id) times of meet
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MeetTime"


components:
  schemas:
    User:
      properties:
        username:
          description: user name
          type: string
        id:
          type: integer
          description: storage user id
    Meet:
      properties:
        name:
          type: string
          description: "name of meet"
    MeetTime:
      properties:
        date:
          type: string
          description: "date, in which user can to meet. Format: YYYY-MM-DD"
          pattern: '^\d{4}-\d\d-\d\d'
        timeRange:
          type: string
          pattern: '^\d{2}:\d{2}-\d{2}:\d{2}$'
          description: "time range for day, in which user can meet"
